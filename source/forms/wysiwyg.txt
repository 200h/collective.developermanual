==============
WYSIWYG fields
==============

.. admonition:: Description

        WYSIWYG editor programming with Plone
        
Introduction
------------

Plone supports TinyMCE (default), but Kupu and CKEditor are also supported.

Editor preferences
---------------------

Plone supports user text changeable editor. The active editor is stored in 
the :doc:`user preferences </members/member_profile>`.

The user can fallback to hand-edited HTML by setting active editor to none.

The rich text widget can also support optional input formats besides
HTML: structured text and so on.

Text format selector
=====================

The format selector itself is rendered by ``wysiwyg_support.pt`` macros
which is Plone core

* https://svn.plone.org/svn/plone/Products.CMFPlone/trunk/Products/CMFPlone/skins/plone_wysiwyg/wysiwyg_support.pt

Customizing TinyMCE options
----------------------------

In your add-on code, all TinyMCE options in the control panel can be exported and imported
:doc:`using GenericSetup, portal_setup and tinymce.xml </components/genericsetup>`. 

Custom field-specific style list for TinyMCE
-----------------------------------------------

Dexterity
===========

Oho.

Archetypes
===========

For Archetypes see 

* http://plone.org/products/tinymce/documentation/how-to/how-to-customize-tinymce-for-an-archetypes-richwidget

Rich text transformations
---------------------------

* http://plone.org/products/dexterity/documentation/manual/developer-manual/advanced/rich-text-markup-and-transformations

* http://pypi.python.org/pypi/plone.app.textfield

Disabling transformations
===========================

* http://stackoverflow.com/questions/5796643/make-plone-accept-any-html-input

Hacking TinyMCE Javascript
---------------------------

Plone ships with pre-compressed TinyMCE source code enabled by default.

If you want to toy around with TinyMCE source code itself, you might
want to first enable the usage of debug version of TinyMCE source.

In ``Products.TinyMCE.skins`` open tiny_mce_src.js and
copy-paste its content into tiny_mce.js.

.. note ::

        Replacing tiny_mce.js with tiny_mce_src.js in portal_javascripts
        doesn't seem to work as it breaks TinyMCE plug-in loading.

TinyMCE plug-ins
===================

TinyMCE consists of plug-ins. Existing plug-ins can be overlaid with your 
custom version by loading Javascript after core TinyMCE load.


Ploneboard and anonymous editor
-------------------------------

* http://www.llakomy.com/articles/enable-kupu-for-anonymous-in-ploneboard

