=================
Decorators
=================

Cache decorators allow easy caching of function return values.

`plone.memoize <http://pypi.python.org/pypi/plone.memoize>`_ package offers helpful function decorators to cache the resulting values.

Cache result for process lifecycle
----------------------------------

Example::

    @forever.memoize
    def getFields(area, subject):
        """ Get all fields inside area / subject.

        Results is cached for process lifetime.

        @return: List of internal fields
        """
        schema = getSchema(area)
        return [ field for field in schema if field["subject"] == subject ]

Timeout caches
--------------

Please read `Timed caching decorator with plone.memoize <http://danielnouri.org/blog/devel/plone-memoize-timeout.html?showcomments=yes>`_.

* `Another example <https://svn.plone.org/svn/collective/collective.externalcontent/trunk/collective/externalcontent/tests/test_vocabulary.py>`_.

Other resources
---------------

* `plone.memoize source code <https://svn.plone.org/svn/plone/plone.memoize/trunk/plone/memoize/>`_.

* `zope.app.cache source code <http://svn.zope.org/zope.app.cache/trunk/src/zope/app/cache/>`_


