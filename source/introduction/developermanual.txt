=======================================
 Managing developer manual source code
=======================================

.. contents :: :local:

Introduction
--------------

This concerns only those who

* Wish to generate HTML version of this documentation

* Wish to upload a revised version of this documentation to plone.org

The documentation is in Sphinx format.
Sphinx is a tool that makes it easy to create intelligent and beautiful documentation, written by Georg Brandl and licensed under the BSD license.

* http://sphinx.pocoo.org/

Setting up software
-------------------

First you need to install Git for your operating system::

        sudo apt-get install git-core
        
or::

        sudo port install git-core

.. note:::

        You must not have Sphinx installed in your Python environment (easy_install).
        Remove it, as it will clash with the version created by buildout.
        Use virtualenv if you need to have Sphinx around for other projects.
                
Run buildout to install Sphinx and funnelweb::

        # Note: You must use Python 2.4 here
        python2.4 bootstrap.py
        bin/buildout
        
This will always result to error, but bin/ folder is populated with required scripts.
Now you need to checkout all the source code using Mr. Developer tool::

        bin/develop co ""

Run buildout again::

        bin/buildout

Building static HTML with Sphinx
---------------------------------

This creates *docs/html* folder from *source* folder by compiling all collective.developermanual pages,
using sphinx-build command from buildout::

        cd docs
        make html 

Uploading documentation to a site
---------------------------------

The collective.developer manual contains a buildout
which defines pipeline for `collective.transmogrify <http://pypi.python.org/pypi/collective.transmogrifier/>`_
to read in Sphinx generated HTML files and upload them to Plone site
as `Plone Help Center <http://plone.org/products/plonehelpcenter>`_ Reference Manual content item.

collective.transmogrify was originally developed to provide pipelines to import,
manipulate and export content. It allows you to use plug-in architecture 
to provide necessary steps, *blueprints*, to pass content in content pipeline from a filter to another.
The idea is very similar as in  video and audio codec architectures.

Blueprints can be mix-and-matched using *pipeline.cfg* configuration file.
collective.developermanual defines pipeline for crawling generated Sphinx HTML files,
breaking down the HTML to fields (title, description, body) and then uploading it to a Plone
site using Zope's XML-RPC API and URL functions, like workflow transition, exposed by Plone.
As Zope provides necessary XML-RPC facilities, specific code for the uploader is not
needed on the server running the Plone site. 
        
Setting up Plone site for uploading Sphinx documentation
=========================================================

First install Plone Help Center add-on and create *Reference Manual* 
content type at the remote site.

The documentation can be uploaded to

* Plone site

* `Plone Help Center add-on <http://plone.org/products/plonehelpcenter>`_ installed

* Sphinx specific CSS styles can be installed (optional) for source code colorization,
  warnings, notes and other mark-up in the documentation

Running upload
================

Buildout generates *bin/toplone* command-line script.

Example how to upload to a local Plone instance::

Then 

        bin/toplone http://admin:admin@localhost:5011/foobar/knowledge-base/test/
        
 
        


         