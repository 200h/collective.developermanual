=====================
 Image-like content
=====================

.. contents ::

Introduction
------------

Plone provides image upload in two ways

* As content type, will be visible in the sitemap. This is the default "Image" content,
  but you can add your custom content type.
  
  
* As a field. Then the image is directly associated with one content object. 
  Use Archetypes.fields.ImageField.
  
 
Custom image content type 
--------------------------

If you want to have your custom content type behave like
Plone stock Image content type.

* Inherit content class from Products.ATContentType.content.image.ATImage
  and use schema correspondingly

* Make your GenericSetup types XML to look like `Image.xml <http://svn.plone.org/svn/plone/Plone/branches/3.3/Products/CMFPlone/profiles/default/types/Image.xml>`_.

* Do not set workflow for your type in *profiles/default/workflows.xml*

.. code-block:: xml

	<?xml version="1.0"?>
	<object name="portal_workflow" meta_type="Plone Workflow Tool">

	 <bindings>
	  <type type_id="YourImageType"/>
	 </bindings>
	</object>
	

Image scales
--------------------

When the image is  uploaded, both field or content, Plone creates default scaled down versions
from it.

These are configured as ImageField *sizes* parameter. See ImageField class notes here:

*  http://svn.plone.org/svn/archetypes/Products.Archetypes/trunk/Products/Archetypes/Field.py

Default image scales for Image content are configured in

* http://svn.plone.org/svn/collective/Products.ATContentTypes/trunk/Products/ATContentTypes/content/image.py

Configuration::

               sizes= {'large'   : (768, 768),
                       'preview' : (400, 400),
                       'mini'    : (200, 200),
                       'thumb'   : (128, 128),
                       'tile'    :  (64, 64),
                       'icon'    :  (32, 32),
                       'listing' :  (16, 16),
                      },
                      
getScale()
==========

ImageField provides function getScale() to get the scaled version of the image based
on the *sizes* configuration key.

See example in __bobo_traverse__

* http://svn.plone.org/svn/collective/Products.ATContentTypes/trunk/Products/ATContentTypes/content/image.py                       

Accessing image
---------------

ImageField is mapped to traversable attribute of your content type.
If your content object has field "imageOne" and content is in URL::

        http://yoursite/content
        
Image can be directly downloaded from::

        http://yoursite/content/imageOne
        

Scaled versions for Image content (ATImage)
============================================

If you want different scales you can add image_XXX prefix where XXX is the corresponding scale name::

        http://yoursite/content/imageOne/image_preview
        
This hook is defined in __bobo_traverse__ in ATImage class        

* http://svn.plone.org/svn/collective/Products.ATContentTypes/trunk/Products/ATContentTypes/content/image.py               

        
Indexing
--------

Do not index images, as putting in image data to porta_catalog brain
would grealy increase its site and make brain look-up slow.

Instead, index only image paths using :doc:`getPhysicalPath() </serving/traversing>`_.
When you need to display image using metadata columns, you can generate the image 
URL manually. Then, image object will be waken up when the browser makes
a HTTP request for the image.


