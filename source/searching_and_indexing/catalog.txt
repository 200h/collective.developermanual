=============
 Catalog
=============

Catalogs are object managing Plone search data - they store indexed data and act as an start point for search query. 

* `ZCatalog source code <http://svn.zope.org/Zope/trunk/src/Products/ZCatalog/ZCatalog.py?rev=96262&view=auto>`_.

* Catalog indexes and metadata columns be be registerd in GenericSetup XML profiles/default/catalogtool.xml


portal_catalog
--------------

The default Plone catalog, where all content is indexed, is called portal_catalog.

It is in the portal root.

The best way to learn what's inside portal_catalog, is to click its various     s in Zope Management Interface.

Other catalogs
--------------

Besides, portal_catalogs, the site contains other catalogs.

* uid_catalog maintains object look up by Unique Identified (UID). UID is given to the object
  when it is created and it does not change even if the object is moved around the site.

* reference_catalog maintains inter-object references by object unique identified (UID). 
  Archetypes's ReferenceField uses this catalog. The catalog contains indexes
  UID, relationship, sourceUID, targetId and targetUID.  

* Add-on products may install their own catalogs which are optimized for specific purposes. 
  For example, `betahaus.emaillogin <http://pypi.python.org/pypi/betahaus.emaillogin>`_
  creates email_catalog is which is used to speed-up login by email process. 

Manually indexing object to a catalog
-------------------------------------

The default content objectreindexObject() is defined in 
`CMFCatalogAware <http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/CMFCatalogAware.py?rev=102742&view=auto>`_
and will update the object data to portal_catalog.

If your code uses additional catalogs, you need to manually update cataloged values after the object has been modified.

Example::

    # Update email_catalog which mantains loggable email addresses
    email_catalog = self.portal.email_catalog
    email_catalog.reindexObject(myuserobject)


archetype_tool catalog map
==========================

archetype_tool maintains map between content types and catalogs which are interested int them.
When object is modified through Archetypes mechanisms, Archetypes post change notification
to all catalogs enlisted.

See *Catalogs*      on archetype_tool in Zope Management Interface.


