=============
 Portlets
=============

.. contents ::

Introduction
------------

Please read `Portlets developer manual <http://plone.org/documentation/manual/portlets-developer-manual/basic-plone.portlets-architecture>`_.

Creating a portlet
------------------

* You need a paster-compatible product skeleton created using *paster create -t plone* or
  *paster create -t archetypes* commands.
  
* Use project specific paster command *paster addcontent portlet* to create a code 
  skeleton for your new portlet. 

Subclassing a portlet
---------------------

You can subclass a portlet to create a new portlet type with your enhanced functionality.

* http://plone.org/documentation/manual/developer-manual/portlets/appendix-practicals/subclassing-new-portlets

Overriding a portlet renderer
-----------------------------

* http://plone.org/documentation/manual/theme-reference/elements/portlet/override-the-portlets-in-plone-3.0

update() and render()
-----------------------

These methods should honour `zope.contentprovider.interfaces.IContentProvider call contract <http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto>`_.

Walking through every porlet on the site
-----------------------------------------

The following code iterates through all portlets assigned
directly to content items. This excludes dashboard, group and content type based portlets.
This can be used if you need to e.g. mass-edit portlets::

        from zope.component import getUtility, getMultiAdapter
        from zope.app.component.hooks import setHooks, setSite, getSite

        from plone.portlets.interfaces import IPortletType
        from plone.portlets.interfaces import IPortletManager
        from plone.portlets.interfaces import IPortletAssignment
        from plone.portlets.interfaces import IPortletDataProvider
        from plone.portlets.interfaces import IPortletRenderer
        

        # Walk through all content item portlets
        portal = getSite() 
        all_content = portal.portal_catalog(show_inactive=True, language="ALL")
        all_content.append(portal) # portal itself does not show up in the query above
        for content in all_content:
                for manager in [ "plone.leftcolumn", "plone.rightcolumn" ]:
                        manager = getUtility(IPortletManager, name='plone.rightcolumn', context=self.portal)
                        
                                # 
                                mapping = getMultiAdapter((self.folder, self.manager,), IPortletAssignmentMapping)
                                
                                # id is portlet assignment id
                                # and automatically generated
                                for id, portlet in mapping.items():
                                        print "Found portlet:" + id + " " + str(portlet)                                        

For more information about portlet assignments and managers, see

* http://svn.plone.org/svn/plone/plone.app.portlets/trunk/plone/app/portlets/tests/test_mapping.py

* http://svn.plone.org/svn/plone/plone.app.portlets/trunk/plone/app/portlets/tests/test_traversal.py

* http://svn.plone.org/svn/plone/plone.app.portlets/trunk/plone/app/portlets/configure.zcml

* http://svn.plone.org/svn/plone/plone.portlets/trunk/plone/portlets/interfaces.py

* http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto (for portlet renderers)

Writing your own portlet manager
----------------------------------

If you need additional portlet slots at the site.

* https://weblion.psu.edu/svn/weblion/weblion/Products.ContentWellPortlets/trunk/Products/ContentWellPortlets/tests/test_setup.py
                                     
Other resources and examples
-----------------------------

* `Static text portlet <https://svn.plone.org/svn/plone/plone.portlet.static/trunk/plone/portlet/static/>`_.

* `Templated portlet <https://svn.plone.org/svn/collective/collective.easytemplate/trunk/collective/easytemplate/browser/portlets/templated.py>`_
                                     