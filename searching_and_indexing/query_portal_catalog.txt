Indices
-------

Brain objects
=============

portal_catalog queries return iterable of catalog brain objects.

Brains contain subset of the actual content object information. Available subset is defined 
by metadata columns in portal_catalog.

You can access the brain object information by following::

	# Return arbitary metadata field by metadata field name
	title = brain["Title"] 
		
	# Return object absolute_url()
	url = brain.getURL()
	
	# Load the actual object from the database (SLOW!)
	object = brain.getObject()

Index types
===========

Zope 2 product PluginIndexes_ defines various portal_catalog index types used by Plone.
Read the product source code for non-existent documentation.

Manual object indexing
======================

**Unit test warning:** Usually Plone reindexes modified objects at the end of each request (each transaction).
However, in unit tests this does not apply, since the test runs in one transaction. Thus, you must manually
call reindexObject() for each object you modify and want to subsequently query from portal_catalog.  
	
Querying
--------

**Warning**: Usually if you pass in None as the match value it will match all objects instead of zero objects.

Dumping portal catalog content
==============================

Following is useful in unit test debugging::

	# Print all objects visible to the currently logged in user
	for i in portal_catalog(): print i.getURL() 
	
** Security warning**: Respects priviledges of the current user 

Bypassing query security check
==============================

** Security warning**: All portal_catalog queries are limited to the current user permissions by default.

If you want to bypass this restrictions, use method unrestrictedSearchResults().  

Example::

	# Print absolute content of portal_catalog
	for i in portal_catalog.unrestrictedSearchResults(): print i.getURL() 

Querying by path
================

ExtendedPathIndex_ is the index used for content object paths.
Path index stores the physical path of the objects. 

** Warning: ** If you ever rename your Plone site instance, path index needs to be rebuild.

Example::

	portal_catalog(path={ query: "/myploneinstance/myfolder" }) # return myfolder and all child content 

Querying by interface
=====================

See `this tutorial <http://plone.org/documentation/how-to/query-portal_catalog-for-interfaces>`_.

Combining queries using Boolean operators
=========================================

See AdvancedQuery_.

Example::
 
        from Products import AdvancedQuery 
                
        portal_catalog = self.portal_catalog # Acquire portal_catalog from higher hierarchy level
               
        path = self.getPhysicalPath() # Limit the search to the current folder and its children
        
        # object.getPhysicalPath() returns the path as tuples of path parts
        # Convert path to string
        path = "/".join(path)
                
        # Limit search to path in the current contex object and 
        # match all children implementing either of two interfaces
        # AdvancedQuery operations can be combined using Python expressions & | and ~
        # or AdvancedQuery objects                                    
        query = AdvancedQuery.Eq("path", path) & (AdvancedQuery.Eq("getMyIndexGetter1", "foo") | AdvancedQuery.Eq("getMyIndexGetter2", "bar"))
        
        # The following result variable contains iterable of CatalogBrain objects
        results = portal_catalog.evalAdvancedQuery(query)
              
        # Convert the catalog brains to a Python list containing tuples of object unique ID and Title
        pairs = []
        for nc in results:
            pairs.append((nc["UID"], nc["Title"]))
        

# query = Eq("path", diagnose_path) & Eq("SearchableText", text_query_target)

	query = Eq("path", diagnose_path) & Eq("SearchableText", text_query_target) 

	return self.context.portal_catalog.evalAdvancedQuery(query)


.. _AdvancedQuery: http://www.dieter.handshake.de/pyprojects/zope/AdvancedQuery.html

.. _ExtendedPathIndex: https://svn.plone.org/svn/plone/Products.ExtendedPathIndex/trunk/README.txt

.. _PluginxIndexes: http://svn.zope.org/Zope/trunk/src/Products/PluginIndexes/