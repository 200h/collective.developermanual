
Layer introduction
------------------

Layers are marker interface applied to HTTPRequest_ object. They are usually
used in conjunction of ZCML directives to dynamically activate various parts
of the configuration (theme files, add-on product functionality).

Layers ensure that only one add-on product can override the specific Plone instance functionality
in your site once, but still leaving you with an option to have possibly conflicting add-on products
in your buildout and ZCML once. Remember that multiple Plone site instances can share
the same ZCML and code files.

Many ZCML directives take optional *layer* parameter. See example, resourceDirectory_

Layers can be activated when an add-on product is installed or a certain theme
is picked.

For more information, read `Browser Layer tutorial <http://plone.org/documentation/tutorial/customization-for-developers/browser-layers>`_.

Creating a layer
----------------

Theme layer
===========

Theme layers can be created with following steps

1. Subclass an interface from IDefaultPloneLayer::

	from plone.theme.interfaces import IDefaultPloneLayer

	class IThemeSpecific(IDefaultPloneLayer):
	    """Marker interface that defines a Zope 3 skin layer bound to a Skin
	       Selection in portal_skins.
	       If you need to register a viewlet only for the "YourSkin"
	       skin, this is the interface that must be used for the layer attribute
	       in YourSkin/browser/configure.zcml.
	    """

2. Register in in ZCML. Name must match theme name. Example::

    <interface
        interface=".interfaces.IThemeSpecific"
        type="zope.publisher.interfaces.browser.IBrowserSkinType"
        name="SitsSkin"
        />

3. Declare your theme in profiles/default/skins.xml. Example::

	<skin-path name="SitsSkin" based-on="Plone Default">
	  <layer name="plone_skins_style_folder_name"
		 insert-before="*"/>
	</skin-path>

4. Create profiles/default/browlayers.xml. Example::

   <layers>
    <layer
        name="myproduct"
        interface="Products.myproduct.interfaces.IThemeSpecific"
        />
    </layer>
   </layers>


Manual layers
=============

Apply your layer to HTTPRequest in before_traverse hook or before you call
the code which looks up the interfaces.

See `plone.app.z3cform.z2 <http://svn.zope.org/plone.z3cform/trunk/plone/z3cform/z2.py?rev=88331&view=markup>`_ module.

Checking active layers
----------------------

[21:00:43] <Moo-__-> what's good way to debug which layers are active on HTTP request?
[21:00:52] <Moo-__-> (theming conflicts here)
[21:01:31] <davisagli> Moo-__-: request.__provided__.__iro__ will give you the interfaces in order of precedence

.. HTTPRequest: http://svn.zope.org/Zope/trunk/src/ZPublisher/HTTPRequest.py?rev=99866&view=markup

.. _resourceDirectory: http://apidoc.zope.org/++apidoc++/ZCML/http_co__sl__sl_namespaces.zope.org_sl_browser/resourceDirectory/index.html
